{"uid":"532f939606f4c516","name":"test_login[getData1]","fullName":"testcase.test_login.TestLogin#test_login","historyId":"5a846e694ee41af589c8a9dee72c1324","time":{"start":1681134166533,"stop":1681134166752,"duration":219},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x10e32e410>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'sdsdsds'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '10013'\nmsg = '用户名或者密码错误'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":21,"retriesStatusChange":true,"beforeStages":[{"name":"getData","time":{"start":1681134166532,"stop":1681134166532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x10e32e410>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'sdsdsds'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '10013'\nmsg = '用户名或者密码错误'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError","steps":[{"name":"发送请求","time":{"start":1681134166744,"stop":1681134166748,"duration":4},"status":"passed","steps":[],"attachments":[{"uid":"53aa3cf25acfcd29","name":"请求路径","source":"53aa3cf25acfcd29.attach","type":"text/plain","size":56},{"uid":"bc70d8d344350f7f","name":"请求方式","source":"bc70d8d344350f7f.attach","type":"text/plain","size":4},{"uid":"ad2073a15e3fcce3","name":"请求头","source":"ad2073a15e3fcce3.attach","type":"text/plain","size":198},{"uid":"21ef6d83ba7eeb5","name":"请求体","source":"21ef6d83ba7eeb5.attach","type":"text/plain","size":35}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":4,"shouldDisplayMessage":false},{"name":"获取响应","time":{"start":1681134166748,"stop":1681134166750,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"bbd317d9832683f8","name":"响应状态码","source":"bbd317d9832683f8.attach","type":"text/plain","size":3},{"uid":"d70c407a644e7bb2","name":"响应头","source":"d70c407a644e7bb2.attach","type":"text/plain","size":275},{"uid":"dd52fd57741e1c4b","name":"响应文本内容","source":"dd52fd57741e1c4b.attach","type":"text/plain","size":92}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false},{"name":"断言","time":{"start":1681134166750,"stop":1681134166752,"duration":2},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/aliang/PycharmProjects/pythonProject/ApiAutoTest/util/requestUtil.py\", line 55, in assertResult\n    assert result.status_code == statusCode\n","steps":[],"attachments":[{"uid":"71799d89910690ab","name":"预期响应状态码","source":"71799d89910690ab.attach","type":"text/plain","size":10},{"uid":"a5cde57058c6dafd","name":"预期响应错误码","source":"a5cde57058c6dafd.attach","type":"text/plain","size":9},{"uid":"8876e6e026806b27","name":"预期返回到错误信息 ","source":"8876e6e026806b27.attach","type":"text/plain","size":3}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":3,"attachmentsCount":10,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"登陆模块"},{"name":"story","value":"login"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"aliangdeMBP"},{"name":"thread","value":"13500-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getData","value":"{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'sdsdsds'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '10013', 'msg': '用户名或者密码错误'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bbf44500f56e7da5","status":"failed","statusDetails":"AssertionError","time":{"start":1681134151586,"stop":1681134151668,"duration":82}},{"uid":"7e6e5d0ed6981be9","status":"failed","statusDetails":"AssertionError","time":{"start":1681132758445,"stop":1681132758529,"duration":84}},{"uid":"1d1011293347d3e0","status":"failed","statusDetails":"AssertionError","time":{"start":1681132031481,"stop":1681132031575,"duration":94}},{"uid":"d4404d96dfe76079","status":"passed","time":{"start":1680705235067,"stop":1680705235143,"duration":76}},{"uid":"d5d83cebab600875","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680273375831,"stop":1680273375908,"duration":77}},{"uid":"cbb4285b03d56f11","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680273202273,"stop":1680273202346,"duration":73}},{"uid":"c7c997a9c1e91978","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680270626610,"stop":1680270626687,"duration":77}},{"uid":"ed1dabefc3a56d0a","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680270272469,"stop":1680270272543,"duration":74}},{"uid":"7fc1e5933de2470b","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680270146732,"stop":1680270146805,"duration":73}},{"uid":"25f709a61ed7042d","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680269821585,"stop":1680269821675,"duration":90}},{"uid":"826f93064ef62e9","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680269798265,"stop":1680269798346,"duration":81}},{"uid":"617a900a569f8eba","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680269360097,"stop":1680269360170,"duration":73}},{"uid":"247644079149f78e","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680265088824,"stop":1680265089154,"duration":330}},{"uid":"e61a0e7be62ff049","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680263945413,"stop":1680263945512,"duration":99}},{"uid":"78acfde36297befd","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680262356090,"stop":1680262356376,"duration":286}},{"uid":"f96bc2815f0cf546","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680262027077,"stop":1680262027153,"duration":76}},{"uid":"3ebba276d051a34d","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680261466014,"stop":1680261466094,"duration":80}},{"uid":"8fb768f4f960cca0","status":"broken","statusDetails":"AttributeError: 'RquestUtll' object has no attribute '_dopost'. Did you mean: '_doPost'?","time":{"start":1680261374683,"stop":1680261374683,"duration":0}},{"uid":"2c6f39761f7aa791","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680260864673,"stop":1680260864750,"duration":77}},{"uid":"736c1545d11b031d","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680260737673,"stop":1680260737746,"duration":73}},{"uid":"ab747a6bfa8e5982","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680260214962,"stop":1680260215071,"duration":109}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"532f939606f4c516.json","parameterValues":["{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'sdsdsds'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '10013', 'msg': '用户名或者密码错误'}}"]}