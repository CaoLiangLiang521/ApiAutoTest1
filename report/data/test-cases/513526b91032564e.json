{"uid":"513526b91032564e","name":"test_changjing_01","fullName":"testcase.test_changjing.TestChangJing#test_changjing_01","historyId":"0a5938ed574e47e6fc56142d3302a258","time":{"start":1681134166264,"stop":1681134166274,"duration":10},"status":"broken","statusMessage":"AttributeError: 'str' object has no attribute 'doRequest'","statusTrace":"self = <test_changjing.TestChangJing object at 0x10e32d5a0>\n\n    @allure.story('场景测试一 ')\n    def test_changjing_01(self):\n        ru = RquestUtll()\n        print(RquestUtll)\n    \n        cjru = SceneRquestUtil('changjing_01', 'ru')\n>       cjru.yamAndRequestl()\n\n../testcase/test_changjing.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.sceneRquestUtil.SceneRquestUtil object at 0x10e32f0a0>\n\n    def yamAndRequestl(self):\n        for dict in self.yamlUtil.getYamlData():  #一个dict表示一个请求\n            with allure.step('发送请求：'+dict['name']):\n    \n                logger.info('发送请求:'+dict['name'])\n                #拼接url路径\n                depend = dict['depend']\n                if depend != None:\n                    #判断请求依赖\n                    headers = depend['headers']\n                    if headers != None:\n                         for key, value in headers.items():\n                             if dict['headers'] == None:\n                                 dict['headers'] = { }\n                             #把依赖添加到请求头上\n                             dict ['headers'][key] = var.get(value)\n    \n    \n                    #判断params 依赖\n                    params = depend['params']\n                    if params != None:\n                        for key, value in params.items():\n                            if dict['params'] == None:\n                                dict['params'] = { }\n    \n                            # 把参数添加到params 上\n                            dict['headers'][key] = var.get(value)\n    \n                    #判断data 依赖\n                    data = depend['data']\n                    if data != None:\n                        for key, value in data.items():\n                            if dict['data'] == None:\n                                dict['data'] = { }\n    \n                            # 把参数添加到params 上\n                            dict['data'][key] = var.get(value)\n                    #判断json 依赖\n                    json = depend['json']\n                    if json != None:\n                        for key, value in json.items():\n                            if dict['json'] == None:\n                                dict['json '] = {}\n    \n                            # 把参数添加到params 上\n                            dict['json'][key] = var.get(value)\n                #发送请求\n>               result = self.requestUtil.doRequest(method=dict['method'], url=dict['url'], params=dict['params'],\n                                      data=dict['data'],\n                                      json=dict['json'], headers=dict['headers'], )\nE               AttributeError: 'str' object has no attribute 'doRequest'\n\n../util/sceneRquestUtil.py:63: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'str' object has no attribute 'doRequest'","statusTrace":"self = <test_changjing.TestChangJing object at 0x10e32d5a0>\n\n    @allure.story('场景测试一 ')\n    def test_changjing_01(self):\n        ru = RquestUtll()\n        print(RquestUtll)\n    \n        cjru = SceneRquestUtil('changjing_01', 'ru')\n>       cjru.yamAndRequestl()\n\n../testcase/test_changjing.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.sceneRquestUtil.SceneRquestUtil object at 0x10e32f0a0>\n\n    def yamAndRequestl(self):\n        for dict in self.yamlUtil.getYamlData():  #一个dict表示一个请求\n            with allure.step('发送请求：'+dict['name']):\n    \n                logger.info('发送请求:'+dict['name'])\n                #拼接url路径\n                depend = dict['depend']\n                if depend != None:\n                    #判断请求依赖\n                    headers = depend['headers']\n                    if headers != None:\n                         for key, value in headers.items():\n                             if dict['headers'] == None:\n                                 dict['headers'] = { }\n                             #把依赖添加到请求头上\n                             dict ['headers'][key] = var.get(value)\n    \n    \n                    #判断params 依赖\n                    params = depend['params']\n                    if params != None:\n                        for key, value in params.items():\n                            if dict['params'] == None:\n                                dict['params'] = { }\n    \n                            # 把参数添加到params 上\n                            dict['headers'][key] = var.get(value)\n    \n                    #判断data 依赖\n                    data = depend['data']\n                    if data != None:\n                        for key, value in data.items():\n                            if dict['data'] == None:\n                                dict['data'] = { }\n    \n                            # 把参数添加到params 上\n                            dict['data'][key] = var.get(value)\n                    #判断json 依赖\n                    json = depend['json']\n                    if json != None:\n                        for key, value in json.items():\n                            if dict['json'] == None:\n                                dict['json '] = {}\n    \n                            # 把参数添加到params 上\n                            dict['json'][key] = var.get(value)\n                #发送请求\n>               result = self.requestUtil.doRequest(method=dict['method'], url=dict['url'], params=dict['params'],\n                                      data=dict['data'],\n                                      json=dict['json'], headers=dict['headers'], )\nE               AttributeError: 'str' object has no attribute 'doRequest'\n\n../util/sceneRquestUtil.py:63: AttributeError","steps":[{"name":"发送请求：login","time":{"start":1681134166271,"stop":1681134166272,"duration":1},"status":"broken","statusMessage":"AttributeError: 'str' object has no attribute 'doRequest'\n","statusTrace":"  File \"/Users/aliang/PycharmProjects/pythonProject/ApiAutoTest/util/sceneRquestUtil.py\", line 63, in yamAndRequestl\n    result = self.requestUtil.doRequest(method=dict['method'], url=dict['url'], params=dict['params'],\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"场景"},{"name":"story","value":"场景测试一 "},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_changjing"},{"name":"subSuite","value":"TestChangJing"},{"name":"host","value":"aliangdeMBP"},{"name":"thread","value":"13500-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_changjing"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cafb4399aa2b3745","status":"broken","statusDetails":"AttributeError: 'str' object has no attribute 'doRequest'","time":{"start":1681134151361,"stop":1681134151384,"duration":23}},{"uid":"42feb2fc91fc9470","status":"broken","statusDetails":"AttributeError: 'str' object has no attribute 'doRequest'","time":{"start":1681132758226,"stop":1681132758239,"duration":13}},{"uid":"68486b0251b7b556","status":"broken","statusDetails":"AttributeError: 'str' object has no attribute 'doRequest'","time":{"start":1681132031292,"stop":1681132031302,"duration":10}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"513526b91032564e.json","parameterValues":[]}