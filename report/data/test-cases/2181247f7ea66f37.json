{"uid":"2181247f7ea66f37","name":"test_login[getData2]","fullName":"testcase.test_login.TestLogin#test_login","historyId":"fc6c4e40fdec3e4e168899855d4ea63e","time":{"start":1681134166775,"stop":1681134166859,"duration":84},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x10e32e440>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '0', msg = '登陆成功'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":19,"retriesStatusChange":true,"beforeStages":[{"name":"getData","time":{"start":1681134166775,"stop":1681134166775,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x10e32e440>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '0', msg = '登陆成功'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError","steps":[{"name":"发送请求","time":{"start":1681134166852,"stop":1681134166855,"duration":3},"status":"passed","steps":[],"attachments":[{"uid":"7719d13c9a12e602","name":"请求路径","source":"7719d13c9a12e602.attach","type":"text/plain","size":56},{"uid":"9351f3eab5ef14ba","name":"请求方式","source":"9351f3eab5ef14ba.attach","type":"text/plain","size":4},{"uid":"11714d8e5875f1bb","name":"请求头","source":"11714d8e5875f1bb.attach","type":"text/plain","size":198},{"uid":"f8ff85f66b699325","name":"请求体","source":"f8ff85f66b699325.attach","type":"text/plain","size":47}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":4,"shouldDisplayMessage":false},{"name":"获取响应","time":{"start":1681134166855,"stop":1681134166857,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"7e608a4de0282921","name":"响应状态码","source":"7e608a4de0282921.attach","type":"text/plain","size":3},{"uid":"d0496afdb00a7d08","name":"响应头","source":"d0496afdb00a7d08.attach","type":"text/plain","size":432},{"uid":"e919ab0c5ecab103","name":"响应文本内容","source":"e919ab0c5ecab103.attach","type":"text/plain","size":154}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false},{"name":"断言","time":{"start":1681134166857,"stop":1681134166858,"duration":1},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/aliang/PycharmProjects/pythonProject/ApiAutoTest/util/requestUtil.py\", line 55, in assertResult\n    assert result.status_code == statusCode\n","steps":[],"attachments":[{"uid":"b2386aee5b153728","name":"预期响应状态码","source":"b2386aee5b153728.attach","type":"text/plain","size":10},{"uid":"6da6399919b9f30","name":"预期响应错误码","source":"6da6399919b9f30.attach","type":"text/plain","size":9},{"uid":"d126253c30ddb1d5","name":"预期返回到错误信息 ","source":"d126253c30ddb1d5.attach","type":"text/plain","size":3}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":3,"attachmentsCount":10,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"登陆模块"},{"name":"story","value":"login"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"aliangdeMBP"},{"name":"thread","value":"13500-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getData","value":"{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '0', 'msg': '登陆成功'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f1cd3b32f5d03fe","status":"failed","statusDetails":"AssertionError","time":{"start":1681134151679,"stop":1681134151776,"duration":97}},{"uid":"8b35811aa5800223","status":"failed","statusDetails":"AssertionError","time":{"start":1681132758546,"stop":1681132758668,"duration":122}},{"uid":"e48787d3a1a8843f","status":"failed","statusDetails":"AssertionError","time":{"start":1681132031589,"stop":1681132031922,"duration":333}},{"uid":"7fceb61b458433a2","status":"passed","time":{"start":1680705235145,"stop":1680705235223,"duration":78}},{"uid":"96bd0a7f157fe996","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680273375913,"stop":1680273375986,"duration":73}},{"uid":"1e498b9ac2f5f668","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680273202350,"stop":1680273202421,"duration":71}},{"uid":"c9a0003abfe38faf","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680270626697,"stop":1680270626773,"duration":76}},{"uid":"bb260ee74454c964","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680270272560,"stop":1680270272633,"duration":73}},{"uid":"63dca4d22bd07dcd","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680270146822,"stop":1680270146898,"duration":76}},{"uid":"89885a66b1d4172c","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680269821700,"stop":1680269821780,"duration":80}},{"uid":"2573d1615dd917d0","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680269798378,"stop":1680269798470,"duration":92}},{"uid":"217d7bec959827b8","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680269360186,"stop":1680269360263,"duration":77}},{"uid":"b098ef3f85f4c72d","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680265089168,"stop":1680265089268,"duration":100}},{"uid":"203e98d6fd4e8781","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680263945528,"stop":1680263945730,"duration":202}},{"uid":"f364d24a0744b064","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'","time":{"start":1680262356404,"stop":1680262356485,"duration":81}},{"uid":"ff76781992df2097","status":"broken","statusDetails":"AttributeError: 'Response' object has no attribute 'test'. Did you mean: 'text'?","time":{"start":1680262027174,"stop":1680262027252,"duration":78}},{"uid":"1b51969e506ce577","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680261466102,"stop":1680261466178,"duration":76}},{"uid":"110fc2d37ab2f5f8","status":"broken","statusDetails":"AttributeError: 'RquestUtll' object has no attribute '_dopost'. Did you mean: '_doPost'?","time":{"start":1680261374693,"stop":1680261374693,"duration":0}},{"uid":"638c8227ef5ab93e","status":"broken","statusDetails":"KeyError: 'vaildate'","time":{"start":1680260864756,"stop":1680260864833,"duration":77}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2181247f7ea66f37.json","parameterValues":["{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '0', 'msg': '登陆成功'}}"]}