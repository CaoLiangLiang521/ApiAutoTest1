{"name": "test_login[getData0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x10e32f130>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '0', msg = '登陆成功'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "a6cc00eb-d94f-4c91-ad88-7f94bab38f85-attachment.attach"}, {"name": "请求方式", "source": "30ccd8b4-28b2-495a-aec1-75f73da07f54-attachment.attach"}, {"name": "请求头", "source": "d035340f-5fe6-4a84-96db-924158a2e6d3-attachment.attach"}, {"name": "请求体", "source": "98443521-2c3f-4ed7-a4b6-03b4fb722fb9-attachment.attach"}], "start": 1681134166478, "stop": 1681134166491}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "851435cb-9141-4c9b-b129-2dcc58722675-attachment.attach"}, {"name": "响应头", "source": "51195e21-56b2-4dc8-bc08-552201cc8534-attachment.attach"}, {"name": "响应文本内容", "source": "d67d3500-07ea-4ce5-b50b-a45bffd51cc4-attachment.attach"}], "start": 1681134166491, "stop": 1681134166492}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/aliang/PycharmProjects/pythonProject/ApiAutoTest/util/requestUtil.py\", line 55, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "2a487188-0551-482f-b691-787eb5b17b22-attachment.attach"}, {"name": "预期响应错误码", "source": "7d454952-5461-45eb-80e8-ec139532ab5f-attachment.attach"}, {"name": "预期返回到错误信息 ", "source": "3ff42abd-1d3d-40e7-8ddc-b9db4e85549b-attachment.attach"}], "start": 1681134166493, "stop": 1681134166494}], "parameters": [{"name": "getData", "value": "{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '0', 'msg': '登陆成功'}}"}], "start": 1681134166385, "stop": 1681134166495, "uuid": "c63bc105-988a-4b12-ae79-049d77a4e6e5", "historyId": "7d2cf2a0e4136eba74036c42b657c468", "testCaseId": "c54ba4c514553f220eeed2f7e798b554", "fullName": "testcase.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登陆模块"}, {"name": "story", "value": "login"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "aliangdeMBP"}, {"name": "thread", "value": "13500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login"}]}