{"name": "test_login[getData2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x10e32e440>\ngetData = {'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('login')\n    def test_login(self,getData):\n        #发送请求\n        result  = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],\n                     json=getData['json'],headers=getData['headers'],)\n    \n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n../testcase/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <util.requestUtil.RquestUtll object at 0x10e2d0340>\nresult = <Response [200]>, statusCode = '200', errorCode = '0', msg = '登陆成功'\n\n    def assertResult(self,result,statusCode,errorCode,msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str('statusCode'),'预期响应状态码')\n            allure.attach(str('errorCode'), '预期响应错误码')\n            allure.attach(str('msg'), '预期返回到错误信息 ')\n>           assert result.status_code == statusCode\nE           AssertionError\n\n../util/requestUtil.py:55: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "b70864ae-6bf3-4a9f-943d-f2b5ff292aa4-attachment.attach"}, {"name": "请求方式", "source": "1f9c07d0-11ce-4564-b322-27370d29ec73-attachment.attach"}, {"name": "请求头", "source": "51ef0ab2-4b66-47af-8d72-c23f473258a8-attachment.attach"}, {"name": "请求体", "source": "64de7af3-ea12-4c5c-ae4c-b2da0c435440-attachment.attach"}], "start": 1681134166852, "stop": 1681134166855}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "afcfbedf-6fcc-48f4-a913-40ff82106aa7-attachment.attach"}, {"name": "响应头", "source": "f4dc34b5-c8e4-43aa-9b49-2e18e2999992-attachment.attach"}, {"name": "响应文本内容", "source": "da395e24-db75-4723-be7a-cf058c116c90-attachment.attach"}], "start": 1681134166855, "stop": 1681134166857}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/aliang/PycharmProjects/pythonProject/ApiAutoTest/util/requestUtil.py\", line 55, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "97fc1c5e-ac0e-4da6-bc59-48873db55306-attachment.attach"}, {"name": "预期响应错误码", "source": "0945d12d-963b-482a-876c-d965511f07c3-attachment.attach"}, {"name": "预期返回到错误信息 ", "source": "3f678381-7e72-4c8c-8237-edc6ebda7fdc-attachment.attach"}], "start": 1681134166857, "stop": 1681134166858}], "parameters": [{"name": "getData", "value": "{'name': 'login', 'method': 'POST', 'url': 'http://www.xuxuclassmate.cn:12345/dolphinscheduler/login', 'headers': None, 'params': None, 'data': {'userName': 'admin', 'userPassword': 'dolphinscheduler123'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '0', 'msg': '登陆成功'}}"}], "start": 1681134166775, "stop": 1681134166859, "uuid": "4a764e2f-3bd3-4cde-bb02-5c79b30ebcc6", "historyId": "fc6c4e40fdec3e4e168899855d4ea63e", "testCaseId": "c54ba4c514553f220eeed2f7e798b554", "fullName": "testcase.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登陆模块"}, {"name": "story", "value": "login"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "aliangdeMBP"}, {"name": "thread", "value": "13500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login"}]}